{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/FoliofyUpdated/src/components/Form/Form.js\";\nimport React from \"react\";\nimport \"./Form.css\";\nimport Input from \"../UI/Input/Input\";\nimport { Button } from \"react-bootstrap\";\n\nclass FormComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.inputChangedHandler = (event, inputIdentifier) => {\n      const updatedDetailForm = { ...this.state.detailForm\n      };\n      const updatedFormElement = { ...updatedDetailForm[inputIdentifier]\n      };\n      updatedFormElement.value = event.target.value;\n      updatedDetailForm[inputIdentifier] = updatedFormElement;\n      this.setState({\n        detailForm: updatedDetailForm\n      });\n    };\n\n    this.state = {\n      detailForm: {\n        name: {\n          elementType: \"input\",\n          elementConfig: {\n            placeholder: \"Your Name\",\n            type: \"text\",\n            label: \"Name\"\n          },\n          value: \"\"\n        },\n        aboutMe: {\n          elementType: \"textarea\",\n          elementConfig: {\n            placeholder: \"Max 1000 Characters\",\n            type: \"text\",\n            label: \"About Me\"\n          },\n          value: \"\"\n        },\n        education: {\n          elementType: \"textarea\",\n          elementConfig: {\n            placeholder: \"Educational Qualification of your last degree\",\n            type: \"text\",\n            label: \"Education\"\n          },\n          value: \"\"\n        },\n        experience: {\n          elementType: \"textarea\",\n          elementConfig: {\n            placeholder: \"Tell me about your experience\",\n            type: \"text\",\n            label: \"Experience\"\n          },\n          value: \"\"\n        },\n        yearsOfExperience: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [{\n              value: \"0-1\",\n              displayValue: \"0-1\"\n            }, {\n              value: \"1-2\",\n              displayValue: \"1-2\"\n            }, {\n              value: \"More than 2\",\n              displayValue: \">2\"\n            }],\n            label: \"Years of Experience\"\n          },\n          value: \"\"\n        },\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"email\",\n            placeholder: \"Your primary email\",\n            label: \"Email\"\n          },\n          value: \"\"\n        },\n        skills: {\n          elementType: \"textarea\",\n          elementConfig: {\n            placeholder: \"Seperate your skills using comma(,)\",\n            type: \"text\",\n            label: \"Skills\"\n          },\n          value: \"\"\n        },\n        githubHandle: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Your github url\",\n            label: \"Github\"\n          },\n          value: \"\"\n        },\n        linkedInHandle: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Your linkedIn url\",\n            label: \"LinkedIn\"\n          },\n          value: \"\"\n        }\n      }\n    };\n  }\n\n  render() {\n    const detailElementsArray = [];\n\n    for (let key in this.state.detailForm) {\n      detailElementsArray.push({\n        id: key,\n        config: this.state.detailForm[key]\n      });\n    }\n\n    let form = React.createElement(\"form\", {\n      onSubmit: this.detailHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, detailElementsArray.map(detailElement => React.createElement(Input, {\n      key: detailElement.id,\n      label: detailElement.config.elementConfig.label,\n      elementType: detailElement.config.elementType,\n      elementConfig: detailElement.config.elementConfig,\n      value: detailElement.config.value,\n      changed: event => this.inputChangedHandler(event, detailElement.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Submit\"));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"FormData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Tell me about yourself\"), form));\n  }\n\n}\n\nexport default FormComponent;","map":{"version":3,"sources":["/Users/apple/Desktop/FoliofyUpdated/src/components/Form/Form.js"],"names":["React","Input","Button","FormComponent","Component","constructor","props","inputChangedHandler","event","inputIdentifier","updatedDetailForm","state","detailForm","updatedFormElement","value","target","setState","name","elementType","elementConfig","placeholder","type","label","aboutMe","education","experience","yearsOfExperience","options","displayValue","email","skills","githubHandle","linkedInHandle","render","detailElementsArray","key","push","id","config","form","detailHandler","map","detailElement"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Form.css\";\nimport Input from \"../UI/Input/Input\";\nimport { Button } from \"react-bootstrap\";\n\nclass FormComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detailForm: {\n        name: {\n          elementType: \"input\",\n          elementConfig: {\n            placeholder: \"Your Name\",\n            type: \"text\",\n            label: \"Name\"\n          },\n          value: \"\"\n        },\n        aboutMe: {\n          elementType: \"textarea\",\n          elementConfig: {\n            placeholder: \"Max 1000 Characters\",\n            type: \"text\",\n            label: \"About Me\"\n          },\n          value: \"\"\n        },\n        education: {\n          elementType: \"textarea\",\n          elementConfig: {\n            placeholder: \"Educational Qualification of your last degree\",\n            type: \"text\",\n            label: \"Education\"\n          },\n          value: \"\"\n        },\n        experience: {\n          elementType: \"textarea\",\n          elementConfig: {\n            placeholder: \"Tell me about your experience\",\n            type: \"text\",\n            label: \"Experience\"\n          },\n          value: \"\"\n        },\n        yearsOfExperience: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [\n              { value: \"0-1\", displayValue: \"0-1\" },\n              { value: \"1-2\", displayValue: \"1-2\" },\n              { value: \"More than 2\", displayValue: \">2\" }\n            ],\n            label: \"Years of Experience\"\n          },\n          value: \"\"\n        },\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"email\",\n            placeholder: \"Your primary email\",\n            label: \"Email\"\n          },\n          value: \"\"\n        },\n        skills: {\n          elementType: \"textarea\",\n          elementConfig: {\n            placeholder: \"Seperate your skills using comma(,)\",\n            type: \"text\",\n            label: \"Skills\"\n          },\n          value: \"\"\n        },\n        githubHandle: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Your github url\",\n            label: \"Github\"\n          },\n          value: \"\"\n        },\n        linkedInHandle: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Your linkedIn url\",\n            label: \"LinkedIn\"\n          },\n          value: \"\"\n        }\n      }\n    };\n  }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedDetailForm = {\n      ...this.state.detailForm\n    };\n    const updatedFormElement = {\n      ...updatedDetailForm[inputIdentifier]\n    };\n    updatedFormElement.value = event.target.value;\n    updatedDetailForm[inputIdentifier] = updatedFormElement;\n    this.setState({ detailForm: updatedDetailForm });\n  };\n\n  render() {\n    const detailElementsArray = [];\n    for (let key in this.state.detailForm) {\n      detailElementsArray.push({\n        id: key,\n        config: this.state.detailForm[key]\n      });\n    }\n    let form = (\n      <form onSubmit={this.detailHandler}>\n        {detailElementsArray.map(detailElement => (\n          <Input\n            key={detailElement.id}\n            label={detailElement.config.elementConfig.label}\n            elementType={detailElement.config.elementType}\n            elementConfig={detailElement.config.elementConfig}\n            value={detailElement.config.value}\n            changed={event => this.inputChangedHandler(event, detailElement.id)}\n          />\n        ))}\n        <Button>Submit</Button>\n      </form>\n    );\n    return (\n      <React.Fragment>\n        <div className=\"FormData\">\n          <h1 className=\"Title\">Tell me about yourself</h1>\n          {form}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default FormComponent;\n"]},"metadata":{},"sourceType":"module"}