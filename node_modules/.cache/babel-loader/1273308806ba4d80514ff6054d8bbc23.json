{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/FoliofyOrg/src/components/Form/FormComponents/PersonalCompoenent/PersonalComponent.js\";\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { Form, Button } from \"react-bootstrap\";\nimport * as Yup from 'yup';\nconst validationSchema = Yup.object().shape({\n  fullName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  aboutMe: Yup.string().min(10, 'Too Short!').max(1000, 'Too Long!').required('Required'),\n  email: Yup.string().email('Invalid email').required('Required')\n});\n\nconst Personal = props => {\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    errors\n  } = useFormik({\n    initialValues: {\n      fullName: \"\",\n      aboutMe: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      country: \"\",\n      state: \"\",\n      city: \"\",\n      githubUrl: \"\",\n      linkedinUrl: \"\"\n    },\n    PersonalSchema,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"fullName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Form.Control, {\n    placeholder: \"Enter Your Name\",\n    id: \"fullName\",\n    name: \"fullName\",\n    type: \"text\",\n    onChange: handleChange,\n    value: values.fullName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"aboutMe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"About Me\"), React.createElement(Form.Control, {\n    placeholder: \"Tell me about yourself.\",\n    id: \"aboutMe\",\n    name: \"aboutMe\",\n    type: \"textarea\",\n    onChange: handleChange,\n    value: values.aboutMe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Maximum 1000 words.\")), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email address\",\n    id: \"email\",\n    name: \"email\",\n    onChange: handleChange,\n    value: values.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"phoneNum\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Contact Number\"), React.createElement(Form.Control, {\n    type: \"number\",\n    placeholder: \"Enter your phone number\",\n    id: \"phoneNum\",\n    name: \"phoneNum\",\n    onChange: handleChange,\n    value: values.phoneNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"country\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Country\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter your country\",\n    id: \"country\",\n    name: \"country\",\n    onChange: handleChange,\n    value: values.country,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"state\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"State\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter your state\",\n    id: \"state\",\n    name: \"state\",\n    onChange: handleChange,\n    value: values.state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"city\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"City\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter your city\",\n    id: \"city\",\n    name: \"city\",\n    onChange: handleChange,\n    value: values.city,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"githubUrl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Github URL\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter your githubUrl\",\n    id: \"githubUrl\",\n    name: \"githubUrl\",\n    onChange: handleChange,\n    value: values.githubUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"linkedinUrl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"LinkedIn URL\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter your linkedInUrl\",\n    id: \"linkedinUrl\",\n    name: \"linkedinUrl\",\n    onChange: handleChange,\n    value: values.linkedinUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nexport default Personal;","map":{"version":3,"sources":["/Users/apple/Desktop/FoliofyOrg/src/components/Form/FormComponents/PersonalCompoenent/PersonalComponent.js"],"names":["React","useFormik","Form","Button","Yup","validationSchema","object","shape","fullName","string","min","max","required","aboutMe","email","Personal","props","handleSubmit","handleChange","values","errors","initialValues","phoneNumber","country","state","city","githubUrl","linkedinUrl","PersonalSchema","onSubmit","alert","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAGA,MAAMC,gBAAgB,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,EAAAA,QAAQ,EAAEJ,GAAG,CAACK,MAAJ,GACPC,GADO,CACH,CADG,EACA,YADA,EAEPC,GAFO,CAEH,EAFG,EAEC,WAFD,EAGPC,QAHO,CAGE,UAHF,CAD8B;AAKxCC,EAAAA,OAAO,EAAET,GAAG,CAACK,MAAJ,GACNC,GADM,CACF,EADE,EACE,YADF,EAENC,GAFM,CAEF,IAFE,EAEI,WAFJ,EAGNC,QAHM,CAGG,UAHH,CAL+B;AASxCE,EAAAA,KAAK,EAAEV,GAAG,CAACK,MAAJ,GACJK,KADI,CACE,eADF,EAEJF,QAFI,CAEK,UAFL;AATiC,CAAnB,CAAzB;;AAcA,MAAMG,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAACC,IAAAA,YAAD;AAAcC,IAAAA,YAAd;AAA2BC,IAAAA,MAA3B;AAAkCC,IAAAA;AAAlC,MAA4CnB,SAAS,CAAC;AAC1DoB,IAAAA,aAAa,EAAE;AACbb,MAAAA,QAAQ,EAAE,EADG;AAEbK,MAAAA,OAAO,EAAE,EAFI;AAGbC,MAAAA,KAAK,EAAE,EAHM;AAIbQ,MAAAA,WAAW,EAAE,EAJA;AAKbC,MAAAA,OAAO,EAAE,EALI;AAMbC,MAAAA,KAAK,EAAE,EANM;AAObC,MAAAA,IAAI,EAAE,EAPO;AAQbC,MAAAA,SAAS,EAAE,EARE;AASbC,MAAAA,WAAW,EAAE;AATA,KAD2C;AAY1DC,IAAAA,cAZ0D;AAa1DC,IAAAA,QAAQ,EAAEV,MAAM,IAAI;AAClBW,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeb,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACD;AAfyD,GAAD,CAA3D;AAiBA,SACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,WAAW,EAAC,iBADd;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,QAAQ,EAAEC,YALZ;AAME,IAAA,KAAK,EAAEC,MAAM,CAACX,QANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAcE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,WAAW,EAAC,yBADd;AAEE,IAAA,EAAE,EAAC,SAFL;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,QAAQ,EAAEU,YALZ;AAME,IAAA,KAAK,EAAEC,MAAM,CAACN,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAVF,CAdF,EA0BE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,qBAFd;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,QAAQ,EAAEK,YALZ;AAME,IAAA,KAAK,EAAEC,MAAM,CAACL,KANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA1BF,EAqCE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,WAAW,EAAC,yBAFd;AAGE,IAAA,EAAE,EAAC,UAHL;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,QAAQ,EAAEI,YALZ;AAME,IAAA,KAAK,EAAEC,MAAM,CAACG,WANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CArCF,EAgDE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,oBAFd;AAGE,IAAA,EAAE,EAAC,SAHL;AAIE,IAAA,IAAI,EAAC,SAJP;AAKE,IAAA,QAAQ,EAAEJ,YALZ;AAME,IAAA,KAAK,EAAEC,MAAM,CAACI,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAhDF,EA2DE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,QAAQ,EAAEL,YALZ;AAME,IAAA,KAAK,EAAEC,MAAM,CAACK,KANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA3DF,EAsEE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,iBAFd;AAGE,IAAA,EAAE,EAAC,MAHL;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,QAAQ,EAAEN,YALZ;AAME,IAAA,KAAK,EAAEC,MAAM,CAACM,IANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAtEF,EAiFE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,sBAFd;AAGE,IAAA,EAAE,EAAC,WAHL;AAIE,IAAA,IAAI,EAAC,WAJP;AAKE,IAAA,QAAQ,EAAEP,YALZ;AAME,IAAA,KAAK,EAAEC,MAAM,CAACO,SANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAjFF,EA4FE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,wBAFd;AAGE,IAAA,EAAE,EAAC,aAHL;AAIE,IAAA,IAAI,EAAC,aAJP;AAKE,IAAA,QAAQ,EAAER,YALZ;AAME,IAAA,KAAK,EAAEC,MAAM,CAACQ,WANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA5FF,EAuGE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvGF,CADF;AA6GD,CA/HD;;AAiIA,eAAeZ,QAAf","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport { Form, Button } from \"react-bootstrap\";\nimport * as Yup from 'yup';\n\n\nconst validationSchema = Yup.object().shape({\n    fullName: Yup.string()\n      .min(2, 'Too Short!')\n      .max(50, 'Too Long!')\n      .required('Required'),\n    aboutMe: Yup.string()\n      .min(10, 'Too Short!')\n      .max(1000, 'Too Long!')\n      .required('Required'),\n    email: Yup.string()\n      .email('Invalid email')\n      .required('Required'),\n  });\n\nconst Personal = (props) => {\n  const {handleSubmit,handleChange,values,errors} = useFormik({\n    initialValues: {\n      fullName: \"\",\n      aboutMe: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      country: \"\",\n      state: \"\",\n      city: \"\",\n      githubUrl: \"\",\n      linkedinUrl: \"\"\n    },\n    PersonalSchema,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group>\n        <Form.Label htmlFor=\"fullName\">Name</Form.Label>\n        <Form.Control\n          placeholder=\"Enter Your Name\"\n          id=\"fullName\"\n          name=\"fullName\"\n          type=\"text\"\n          onChange={handleChange}\n          value={values.fullName}\n        />\n        {/* {errors.fullName ? errors.fullName:null} */}\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Label htmlFor=\"aboutMe\">About Me</Form.Label>\n        <Form.Control\n          placeholder=\"Tell me about yourself.\"\n          id=\"aboutMe\"\n          name=\"aboutMe\"\n          type=\"textarea\"\n          onChange={handleChange}\n          value={values.aboutMe}\n        />\n        <Form.Text className=\"text-muted\">Maximum 1000 words.</Form.Text>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label htmlFor=\"email\">Email</Form.Label>\n        <Form.Control\n          type=\"email\"\n          placeholder=\"Enter email address\"\n          id=\"email\"\n          name=\"email\"\n          onChange={handleChange}\n          value={values.email}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label htmlFor=\"phoneNum\">Contact Number</Form.Label>\n        <Form.Control\n          type=\"number\"\n          placeholder=\"Enter your phone number\"\n          id=\"phoneNum\"\n          name=\"phoneNum\"\n          onChange={handleChange}\n          value={values.phoneNumber}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label htmlFor=\"country\">Country</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter your country\"\n          id=\"country\"\n          name=\"country\"\n          onChange={handleChange}\n          value={values.country}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label htmlFor=\"state\">State</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter your state\"\n          id=\"state\"\n          name=\"state\"\n          onChange={handleChange}\n          value={values.state}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label htmlFor=\"city\">City</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter your city\"\n          id=\"city\"\n          name=\"city\"\n          onChange={handleChange}\n          value={values.city}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label htmlFor=\"githubUrl\">Github URL</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter your githubUrl\"\n          id=\"githubUrl\"\n          name=\"githubUrl\"\n          onChange={handleChange}\n          value={values.githubUrl}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label htmlFor=\"linkedinUrl\">LinkedIn URL</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter your linkedInUrl\"\n          id=\"linkedinUrl\"\n          name=\"linkedinUrl\"\n          onChange={handleChange}\n          value={values.linkedinUrl}\n        />\n      </Form.Group>\n      <Button type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  );\n};\n\nexport default Personal;\n"]},"metadata":{},"sourceType":"module"}