{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/FoliofyOrg/src/components/Form/FormComponents/PersonalCompoenent/PersonalComponent.js\";\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { Form, Button } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\nconst validationSchema = Yup.object().shape({\n  fullName: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Required\"),\n  aboutMe: Yup.string().min(10, \"Too Short!\").max(1000, \"Too Long!\").required(\"Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  phoneNum: Yup.number().min(12, \"Invalid Number\").positive(\"Enter a valid Number\").required(\"Required\"),\n  country: Yup.string().required(\"Required\"),\n  state: Yup.string().required(\"Required\"),\n  city: Yup.string().required(\"Required\"),\n  githubUrl: Yup.string().url(\"Enter a valid Url\").required(\"Required\"),\n  linkedinUrl: Yup.string().url(\"Enter a valid Url\").required(\"Required\")\n});\n\nconst Personal = () => {\n  const {\n    handleChange,\n    values,\n    errors,\n    handleSubmit\n  } = useFormik({\n    initialValues: {\n      fullName: \"\",\n      aboutMe: \"\",\n      email: \"\",\n      phoneNum: \"\",\n      country: \"\",\n      state: \"\",\n      city: \"\",\n      githubUrl: \"\",\n      linkedinUrl: \"\"\n    },\n    validationSchema,\n    onSubmit: values => {\n      console.log(values);\n      console.log(validationSchema); //   alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"fullName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Form.Control, {\n    placeholder: \"Enter Your Name\",\n    id: \"fullName\",\n    name: \"fullName\",\n    type: \"text\",\n    onChange: handleChange,\n    value: values.fullName,\n    isInvalid: !!errors.fullName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, errors.fullName)), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"aboutMe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"About Me\"), React.createElement(Form.Control, {\n    placeholder: \"Tell me about yourself.\",\n    id: \"aboutMe\",\n    name: \"aboutMe\",\n    type: \"textarea\",\n    onChange: handleChange,\n    value: values.aboutMe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Maximum 1000 words.\"), errors.aboutMe ? errors.aboutMe : null), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email address\",\n    id: \"email\",\n    name: \"email\",\n    onChange: handleChange,\n    value: values.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), errors.email ? errors.email : null), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"phoneNum\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Contact Number\"), React.createElement(Form.Control, {\n    type: \"number\",\n    placeholder: \"Enter your phone number\",\n    id: \"phoneNum\",\n    name: \"phoneNum\",\n    onChange: handleChange,\n    value: values.phoneNum,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), errors.phoneNum ? errors.phoneNum : null), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"country\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Country\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter your country\",\n    id: \"country\",\n    name: \"country\",\n    onChange: handleChange,\n    value: values.country,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), errors.country ? errors.country : null), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"state\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"State\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter your state\",\n    id: \"state\",\n    name: \"state\",\n    onChange: handleChange,\n    value: values.state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), errors.state ? errors.state : null), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"city\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"City\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter your city\",\n    id: \"city\",\n    name: \"city\",\n    onChange: handleChange,\n    value: values.city,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), errors.city ? errors.city : null), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"githubUrl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Github URL\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter your githubUrl\",\n    id: \"githubUrl\",\n    name: \"githubUrl\",\n    onChange: handleChange,\n    value: values.githubUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), errors.githubUrl ? errors.githubUrl : null), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"linkedinUrl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"LinkedIn URL\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter your linkedInUrl\",\n    id: \"linkedinUrl\",\n    name: \"linkedinUrl\",\n    onChange: handleChange,\n    value: values.linkedinUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), errors.linkedinUrl ? errors.linkedinUrl : null), React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nexport default Personal;","map":{"version":3,"sources":["/Users/apple/Desktop/FoliofyOrg/src/components/Form/FormComponents/PersonalCompoenent/PersonalComponent.js"],"names":["React","useFormik","Form","Button","Yup","validationSchema","object","shape","fullName","string","min","max","required","aboutMe","email","phoneNum","number","positive","country","state","city","githubUrl","url","linkedinUrl","Personal","handleChange","values","errors","handleSubmit","initialValues","onSubmit","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport { Form, Button } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\n\nconst validationSchema = Yup.object().shape({\n  fullName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  aboutMe: Yup.string()\n    .min(10, \"Too Short!\")\n    .max(1000, \"Too Long!\")\n    .required(\"Required\"),\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\"),\n    phoneNum: Yup.number()\n    .min(12, \"Invalid Number\")\n    .positive(\"Enter a valid Number\")\n    .required(\"Required\"),\n    country: Yup.string()\n    .required(\"Required\"),\n    state: Yup.string()\n    .required(\"Required\"),\n    city: Yup.string()\n    .required(\"Required\"),\n    githubUrl: Yup.string()\n    .url(\"Enter a valid Url\")\n    .required(\"Required\"),\n    linkedinUrl: Yup.string()\n    .url(\"Enter a valid Url\")\n    .required(\"Required\")\n});\n\nconst Personal = () => {\n  const {  handleChange, values, errors,handleSubmit } = useFormik({\n    initialValues: {\n      fullName: \"\",\n      aboutMe: \"\",\n      email: \"\",\n      phoneNum: \"\",\n      country: \"\",\n      state: \"\",\n      city: \"\",\n      githubUrl: \"\",\n      linkedinUrl: \"\"\n    },\n    validationSchema,\n    onSubmit: values => {\n      console.log(values);\n      console.log(validationSchema);\n    //   alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group>\n        <Form.Label htmlFor=\"fullName\">Name</Form.Label>\n        <Form.Control\n          placeholder=\"Enter Your Name\"\n          id=\"fullName\"\n          name=\"fullName\"\n          type=\"text\"\n          onChange={handleChange}\n          value={values.fullName}\n          isInvalid={!!errors.fullName}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          {errors.fullName} \n        </Form.Control.Feedback>\n          \n         \n      </Form.Group>\n\n      <Form.Group>\n        <Form.Label htmlFor=\"aboutMe\">About Me</Form.Label>\n        <Form.Control\n          placeholder=\"Tell me about yourself.\"\n          id=\"aboutMe\"\n          name=\"aboutMe\"\n          type=\"textarea\"\n          onChange={handleChange}\n          value={values.aboutMe}\n        />\n        \n        <Form.Text className=\"text-muted\">Maximum 1000 words.</Form.Text>\n        {errors.aboutMe ? errors.aboutMe : null}\n      </Form.Group>\n      <Form.Group>\n        <Form.Label htmlFor=\"email\">Email</Form.Label>\n        <Form.Control\n          type=\"email\"\n          placeholder=\"Enter email address\"\n          id=\"email\"\n          name=\"email\"\n          onChange={handleChange}\n          value={values.email}\n        />\n        {errors.email ? errors.email : null}\n      </Form.Group>\n      <Form.Group>\n        <Form.Label htmlFor=\"phoneNum\">Contact Number</Form.Label>\n        <Form.Control\n          type=\"number\"\n          placeholder=\"Enter your phone number\"\n          id=\"phoneNum\"\n          name=\"phoneNum\"\n          onChange={handleChange}\n          value={values.phoneNum}\n        />\n        {errors.phoneNum ? errors.phoneNum : null}\n      </Form.Group>\n      <Form.Group>\n        <Form.Label htmlFor=\"country\">Country</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter your country\"\n          id=\"country\"\n          name=\"country\"\n          onChange={handleChange}\n          value={values.country}\n        />\n        {errors.country ? errors.country : null}\n      </Form.Group>\n      <Form.Group>\n        <Form.Label htmlFor=\"state\">State</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter your state\"\n          id=\"state\"\n          name=\"state\"\n          onChange={handleChange}\n          value={values.state}\n        />\n        {errors.state ? errors.state : null}\n      </Form.Group>\n      <Form.Group>\n        <Form.Label htmlFor=\"city\">City</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter your city\"\n          id=\"city\"\n          name=\"city\"\n          onChange={handleChange}\n          value={values.city}\n        />\n        {errors.city ? errors.city : null}\n      </Form.Group>\n      <Form.Group>\n        <Form.Label htmlFor=\"githubUrl\">Github URL</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter your githubUrl\"\n          id=\"githubUrl\"\n          name=\"githubUrl\"\n          onChange={handleChange}\n          value={values.githubUrl}\n        />\n        {errors.githubUrl ? errors.githubUrl : null}\n      </Form.Group>\n      <Form.Group>\n        <Form.Label htmlFor=\"linkedinUrl\">LinkedIn URL</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter your linkedInUrl\"\n          id=\"linkedinUrl\"\n          name=\"linkedinUrl\"\n          onChange={handleChange}\n          value={values.linkedinUrl}\n        />\n        {errors.linkedinUrl ? errors.linkedinUrl : null}\n      </Form.Group>\n      <Button type=\"submit\">Submit</Button>\n    </Form>\n  );\n};\n\nexport default Personal;\n"]},"metadata":{},"sourceType":"module"}